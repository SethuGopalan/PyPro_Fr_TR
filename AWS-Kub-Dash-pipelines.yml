# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

variables:
  deployAwsAuthConfigMap: "true"

stages:
  - stage: CreateEKS
    displayName: CreateAwsEKS
    jobs:
      - job: DeployEKS
        displayName: DeploayAWSEKS

        pool:
          vmImage: ubuntu-latest

        steps:
          - task: TerraformCLI@2
            inputs:
              command: "version"
              allowTelemetryCollection: true

          - task: TerraformTaskV4@4
            inputs:
              provider: "aws"
              command: "init"
              workingDirectory: "$(System.DefaultWorkingDirectory)/myenv"
              commandOptions: "-migrate-state"
              backendServiceAWS: "Aws-Terraform-Eks-Connect"
              backendAWSBucketName: "octopusmsiinstaller"
              backendAWSKey: "Kub-dashApp001-dev.tfstate"
            env:
              AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
              AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
          - task: TerraformTaskV4@4
            inputs:
              provider: "aws"
              command: "destroy"
              workingDirectory: "$(System.DefaultWorkingDirectory)/myenv"
              environmentServiceNameAWS: "Aws-Terraform-Eks-Connect"
  #         - task: TerraformTaskV4@4
  #           inputs:
  #             provider: "aws"
  #             workingDirectory: "$(System.DefaultWorkingDirectory)/myenv"
  #             command: "validate"
  #           env:
  #             AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
  #             AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
  #         - task: TerraformTaskV4@4
  #           inputs:
  #             provider: "aws"
  #             command: "plan"
  #             workingDirectory: "$(System.DefaultWorkingDirectory)/myenv"
  #             environmentServiceNameAWS: "Aws-Terraform-Eks-Connect"
  #           env:
  #             AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
  #             AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)

  #         - task: TerraformTaskV4@4
  #           inputs:
  #             provider: "aws"
  #             command: "apply"
  #             workingDirectory: "$(System.DefaultWorkingDirectory)/myenv"
  #             environmentServiceNameAWS: "Aws-Terraform-Eks-Connect"
  #           env:
  #             AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
  #             AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
  # - stage: ConfigureEKS
  #   dependsOn: CreateEKS
  #   condition: succeeded('CreateEKS')
  #   jobs:
  #     - job: UpdateAuthConfig
  #       steps:
  #         - script: |
  #             kubectl apply -f aws-auth-configmap.yaml
  #           displayName: "Update AWS Auth ConfigMap"
  #           condition: and(succeeded(), eq(variables['deployAwsAuthConfigMap'], 'true'))
