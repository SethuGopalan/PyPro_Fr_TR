# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build


    pool:
      vmImage: ubuntu-latest

    steps:
    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'
    - task: Docker@2
      inputs:
        containerRegistry: '7797-docker-kuber'
        repository: '7797/Hello-DashApp-Docker-Image'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
    - task: TerraformCLI@2
      inputs:
        command: 'version'
        allowTelemetryCollection: true
    - task: TerraformTaskV4@4
      inputs:
        provider: 'aws'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory/myenv'
        backendServiceAWS: 'Aws-Terraform-Eks-Connect'
        backendAWSBucketName: 'octopusmsiinstaller'
        backendAWSKey: 'Kub-dashApp-dev.tfstate'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'aws'
        command: 'validate'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'aws'
        command: 'plan'
        environmentServiceNameAWS: 'Aws-Terraform-Eks-Connect'
    - task: TerraformTaskV4@4
      inputs:
        provider: 'aws'
        command: 'apply'
        environmentServiceNameAWS: 'Aws-Terraform-Eks-Connect'


